package com.web.deckshop.pojo.annotations;

// Generated 05/07/2012 04:39:51 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Transaccioncontable generated by hbm2java
 */
@Entity
@Table(name = "transaccioncontable", schema = "web")
public class Transaccioncontable implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7693736428557301437L;
	private int idtransaccioncontable;
	private Tipotransaccion tipotransaccion;
	private Factura factura;
	private Contabilidad contabilidad;
	private Persona persona;
	private Empresa empresa;
	private Date fecha;
	private double valor;
	private String descripcion;

	public Transaccioncontable() {
	}

	public Transaccioncontable(int idtransaccioncontable,
			Tipotransaccion tipotransaccion, Contabilidad contabilidad,
			Date fecha, double valor) {
		this.idtransaccioncontable = idtransaccioncontable;
		this.tipotransaccion = tipotransaccion;
		this.contabilidad = contabilidad;
		this.fecha = fecha;
		this.valor = valor;
	}

	public Transaccioncontable(int idtransaccioncontable,
			Tipotransaccion tipotransaccion, Factura factura,
			Contabilidad contabilidad, Persona persona, Empresa empresa,
			Date fecha, double valor, String descripcion) {
		this.idtransaccioncontable = idtransaccioncontable;
		this.tipotransaccion = tipotransaccion;
		this.factura = factura;
		this.contabilidad = contabilidad;
		this.persona = persona;
		this.empresa = empresa;
		this.fecha = fecha;
		this.valor = valor;
		this.descripcion = descripcion;
	}

	@Id
	@Column(name = "idtransaccioncontable", unique = true, nullable = false)
	public int getIdtransaccioncontable() {
		return this.idtransaccioncontable;
	}

	public void setIdtransaccioncontable(int idtransaccioncontable) {
		this.idtransaccioncontable = idtransaccioncontable;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idtipotransaccion", nullable = false)
	public Tipotransaccion getTipotransaccion() {
		return this.tipotransaccion;
	}

	public void setTipotransaccion(Tipotransaccion tipotransaccion) {
		this.tipotransaccion = tipotransaccion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idfactura")
	public Factura getFactura() {
		return this.factura;
	}

	public void setFactura(Factura factura) {
		this.factura = factura;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcontabilidad", nullable = false)
	public Contabilidad getContabilidad() {
		return this.contabilidad;
	}

	public void setContabilidad(Contabilidad contabilidad) {
		this.contabilidad = contabilidad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idpersona")
	public Persona getPersona() {
		return this.persona;
	}

	public void setPersona(Persona persona) {
		this.persona = persona;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idempresa")
	public Empresa getEmpresa() {
		return this.empresa;
	}

	public void setEmpresa(Empresa empresa) {
		this.empresa = empresa;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha", nullable = false, length = 29)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Column(name = "valor", nullable = false, scale = 0)
	public double getValor() {
		return this.valor;
	}

	public void setValor(double valor) {
		this.valor = valor;
	}

	@Column(name = "descripcion", length = 50)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

}
