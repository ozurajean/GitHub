package com.web.deckshop.pojo.annotations;

// Generated 05/07/2012 04:39:51 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Factura generated by hbm2java
 */
@Entity
@Table(name = "factura", schema = "web")
public class Factura implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -764141626533666090L;
	private int idfactura;
	private Proveedor proveedor;
	private Statusfactura statusfactura;
	private Direccioncliente direccioncliente;
	private Pedido pedido;
	private Cliente cliente;
	private String numerofactura;
	private Date fecha;
	private double valor;
	private double descuento;
	private double envio;
	private double subtotal;
	private double iva;
	private double total;
	private Set<?> transaccioncontables = new HashSet<Object>(0);
	private Set<?> envios = new HashSet<Object>(0);
	private Set<?> detallefacturas = new HashSet<Object>(0);
	private Set<?> pagos = new HashSet<Object>(0);
	private Set<?> facturaStatusfacturas = new HashSet<Object>(0);

	public Factura() {
	}

	public Factura(int idfactura, Proveedor proveedor,
			Statusfactura statusfactura, Direccioncliente direccioncliente,
			Pedido pedido, Cliente cliente, String numerofactura, Date fecha,
			double valor, double descuento, double envio, double subtotal,
			double iva, double total) {
		this.idfactura = idfactura;
		this.proveedor = proveedor;
		this.statusfactura = statusfactura;
		this.direccioncliente = direccioncliente;
		this.pedido = pedido;
		this.cliente = cliente;
		this.numerofactura = numerofactura;
		this.fecha = fecha;
		this.valor = valor;
		this.descuento = descuento;
		this.envio = envio;
		this.subtotal = subtotal;
		this.iva = iva;
		this.total = total;
	}

	public Factura(int idfactura, Proveedor proveedor,
			Statusfactura statusfactura, Direccioncliente direccioncliente,
			Pedido pedido, Cliente cliente, String numerofactura, Date fecha,
			double valor, double descuento, double envio, double subtotal,
			double iva, double total, Set<?> transaccioncontables, Set<?> envios,
			Set<?> detallefacturas, Set<?> pagos, Set<?> facturaStatusfacturas) {
		this.idfactura = idfactura;
		this.proveedor = proveedor;
		this.statusfactura = statusfactura;
		this.direccioncliente = direccioncliente;
		this.pedido = pedido;
		this.cliente = cliente;
		this.numerofactura = numerofactura;
		this.fecha = fecha;
		this.valor = valor;
		this.descuento = descuento;
		this.envio = envio;
		this.subtotal = subtotal;
		this.iva = iva;
		this.total = total;
		this.transaccioncontables = transaccioncontables;
		this.envios = envios;
		this.detallefacturas = detallefacturas;
		this.pagos = pagos;
		this.facturaStatusfacturas = facturaStatusfacturas;
	}

	@Id
	@Column(name = "idfactura", unique = true, nullable = false)
	public int getIdfactura() {
		return this.idfactura;
	}

	public void setIdfactura(int idfactura) {
		this.idfactura = idfactura;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idproveedor", nullable = false)
	public Proveedor getProveedor() {
		return this.proveedor;
	}

	public void setProveedor(Proveedor proveedor) {
		this.proveedor = proveedor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idstatusfactura", nullable = false)
	public Statusfactura getStatusfactura() {
		return this.statusfactura;
	}

	public void setStatusfactura(Statusfactura statusfactura) {
		this.statusfactura = statusfactura;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "iddireccioncliente", nullable = false)
	public Direccioncliente getDireccioncliente() {
		return this.direccioncliente;
	}

	public void setDireccioncliente(Direccioncliente direccioncliente) {
		this.direccioncliente = direccioncliente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idpedido", nullable = false)
	public Pedido getPedido() {
		return this.pedido;
	}

	public void setPedido(Pedido pedido) {
		this.pedido = pedido;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcliente", nullable = false)
	public Cliente getCliente() {
		return this.cliente;
	}

	public void setCliente(Cliente cliente) {
		this.cliente = cliente;
	}

	@Column(name = "numerofactura", nullable = false, length = 20)
	public String getNumerofactura() {
		return this.numerofactura;
	}

	public void setNumerofactura(String numerofactura) {
		this.numerofactura = numerofactura;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha", nullable = false, length = 29)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Column(name = "valor", nullable = false, scale = 0)
	public double getValor() {
		return this.valor;
	}

	public void setValor(double valor) {
		this.valor = valor;
	}

	@Column(name = "descuento", nullable = false, scale = 0)
	public double getDescuento() {
		return this.descuento;
	}

	public void setDescuento(double descuento) {
		this.descuento = descuento;
	}

	@Column(name = "envio", nullable = false, scale = 0)
	public double getEnvio() {
		return this.envio;
	}

	public void setEnvio(double envio) {
		this.envio = envio;
	}

	@Column(name = "subtotal", nullable = false, scale = 0)
	public double getSubtotal() {
		return this.subtotal;
	}

	public void setSubtotal(double subtotal) {
		this.subtotal = subtotal;
	}

	@Column(name = "iva", nullable = false, scale = 0)
	public double getIva() {
		return this.iva;
	}

	public void setIva(double iva) {
		this.iva = iva;
	}

	@Column(name = "total", nullable = false, scale = 0)
	public double getTotal() {
		return this.total;
	}

	public void setTotal(double total) {
		this.total = total;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "factura")
	public Set<?> getTransaccioncontables() {
		return this.transaccioncontables;
	}

	public void setTransaccioncontables(Set<?> transaccioncontables) {
		this.transaccioncontables = transaccioncontables;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "factura")
	public Set<?> getEnvios() {
		return this.envios;
	}

	public void setEnvios(Set<?> envios) {
		this.envios = envios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "factura")
	public Set<?> getDetallefacturas() {
		return this.detallefacturas;
	}

	public void setDetallefacturas(Set<?> detallefacturas) {
		this.detallefacturas = detallefacturas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "factura")
	public Set<?> getPagos() {
		return this.pagos;
	}

	public void setPagos(Set<?> pagos) {
		this.pagos = pagos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "factura")
	public Set<?> getFacturaStatusfacturas() {
		return this.facturaStatusfacturas;
	}

	public void setFacturaStatusfacturas(Set<?> facturaStatusfacturas) {
		this.facturaStatusfacturas = facturaStatusfacturas;
	}

}
