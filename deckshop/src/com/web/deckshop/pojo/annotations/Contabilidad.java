package com.web.deckshop.pojo.annotations;

// Generated 05/07/2012 04:39:51 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Contabilidad generated by hbm2java
 */
@Entity
@Table(name = "contabilidad", schema = "web", uniqueConstraints = @UniqueConstraint(columnNames = {
		"aniocontable", "numerocuenta" }))
public class Contabilidad implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6866528924612731444L;
	private int idcontabilidad;
	private Cuenta cuenta;
	private short numerocuenta;
	private short aniocontable;
	private double valor;
	private String descripcion;
	private Set<?> transaccioncontables = new HashSet<Object>(0);

	public Contabilidad() {
	}

	public Contabilidad(int idcontabilidad, Cuenta cuenta, short numerocuenta,
			short aniocontable, double valor) {
		this.idcontabilidad = idcontabilidad;
		this.cuenta = cuenta;
		this.numerocuenta = numerocuenta;
		this.aniocontable = aniocontable;
		this.valor = valor;
	}

	public Contabilidad(int idcontabilidad, Cuenta cuenta, short numerocuenta,
			short aniocontable, double valor, String descripcion,
			Set<?> transaccioncontables) {
		this.idcontabilidad = idcontabilidad;
		this.cuenta = cuenta;
		this.numerocuenta = numerocuenta;
		this.aniocontable = aniocontable;
		this.valor = valor;
		this.descripcion = descripcion;
		this.transaccioncontables = transaccioncontables;
	}

	@Id
	@Column(name = "idcontabilidad", unique = true, nullable = false)
	public int getIdcontabilidad() {
		return this.idcontabilidad;
	}

	public void setIdcontabilidad(int idcontabilidad) {
		this.idcontabilidad = idcontabilidad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcuenta", nullable = false)
	public Cuenta getCuenta() {
		return this.cuenta;
	}

	public void setCuenta(Cuenta cuenta) {
		this.cuenta = cuenta;
	}

	@Column(name = "numerocuenta", nullable = false)
	public short getNumerocuenta() {
		return this.numerocuenta;
	}

	public void setNumerocuenta(short numerocuenta) {
		this.numerocuenta = numerocuenta;
	}

	@Column(name = "aniocontable", nullable = false)
	public short getAniocontable() {
		return this.aniocontable;
	}

	public void setAniocontable(short aniocontable) {
		this.aniocontable = aniocontable;
	}

	@Column(name = "valor", nullable = false, scale = 0)
	public double getValor() {
		return this.valor;
	}

	public void setValor(double valor) {
		this.valor = valor;
	}

	@Column(name = "descripcion", length = 50)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contabilidad")
	public Set<?> getTransaccioncontables() {
		return this.transaccioncontables;
	}

	public void setTransaccioncontables(Set<?> transaccioncontables) {
		this.transaccioncontables = transaccioncontables;
	}

}
